---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project1
  template:
    metadata:
      labels:
        app: project1
    spec:
      containers:
      - name: web
        image: busybox
        command: ['sh', '-c', 'while true; do echo -e "HTTP/1.1 200 OK\nContent-Type: text/html\n\n<html><body style=\'background-color:red; color:white;\'><h1>Project1: $(hostname -i)</h1></body></html>" | nc -l -p 8080 -q 1; done']
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: project1-service
spec:
  selector:
    app: project1
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project2
  template:
    metadata:
      labels:
        app: project2
    spec:
      containers:
      - name: web
        image: busybox
        command: ['sh', '-c', 'while true; do echo -e "HTTP/1.1 200 OK\nContent-Type: text/html\n\n<html><body style=\'background-color:purple; color:white;\'><h1>Project2: $(hostname -i)</h1></body></html>" | nc -l -p 8080 -q 1; done']
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: project2-service
spec:
  selector:
    app: project2
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: project-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: konkas-demo
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    kubernetes.io/ingress.class: alb
spec:
  rules:
  - host: dev-project1.konkas.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project1-service
            port:
              number: 80
  - host: dev-project2.konkas.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project2-service
            port:
              number: 80
